{"version":3,"sources":["components/ContactList/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","App.module.css","components/ContactList/ContactList.module.css","redux/contacts-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","redux/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","nanoid","deleteContact","changeFilter","connect","dispatch","onFormSubmit","contactsActions","useState","setName","setNumber","className","s","form","onSubmit","event","preventDefault","input","type","onChange","currentTarget","value","pattern","title","required","button","state","contacts","filter","e","target","text","visibleContacts","items","contact","toLowerCase","includes","trim","onDelete","container","item","onClick","list","map","App","mainTitle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","actions","action","find","alert","newContact","_","combineReducers","contactPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d7bacdcc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactListItem_button__j2aC2\",\"container\":\"ContactListItem_container__2E9Jl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__2-bFv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTitle\":\"App_mainTitle__30DHH\",\"title\":\"App_title__2DRQZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__fS4Uk\"};","import { nanoid } from \"nanoid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst addContact = createAction(\"contacts/add\", (name, number) => ({\n  payload: { name, number, id: nanoid() },\n}));\n\nconst deleteContact = createAction(\"contacts/delete\");\nconst changeFilter = createAction(\"contacts/filter\");\n\nexport default { addContact, deleteContact, changeFilter };\n","import { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport contactsActions from \"../../redux/contacts-actions\";\n\nimport s from \"../ContactForm/ContactForm.module.css\";\n\nfunction ContactForm({ onFormSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const onChange = (event) => {\n    setName(event.currentTarget.value);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    onFormSubmit(name, number);\n    setName(\"\");\n    setNumber(\"\");\n  };\n  const onChangeNumber = (event) => {\n    setNumber(event.currentTarget.value);\n  };\n  return (\n    <>\n      <form className={s.form} onSubmit={onSubmit}>\n        <p className={s.name}>Name</p>\n        <input\n          className={s.input}\n          type=\"text\"\n          onChange={onChange}\n          value={name}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <p className={s.name}>Number</p>\n        <input\n          className={s.input}\n          type=\"tel\"\n          onChange={onChangeNumber}\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n\n        <button className={s.button} type=\"onSubmit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onFormSubmit: (name, number) =>\n    dispatch(contactsActions.addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import s from \"./Filter.module.css\";\nimport { connect } from \"react-redux\";\n\nimport contactsActions from \"../../redux/contacts-actions\";\n\nfunction Filter({ value, onChange }) {\n  return (\n    <>\n      <p className={s.text}>Find contacts by name</p>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({ value: state.contacts.filter });\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(contactsActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from \"prop-types\";\nimport s from \"../ContactListItem/ContactListItem.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../../redux/contacts-actions\";\n\nfunction ContactListItem({ contact, onDelete }) {\n  return (\n    <div className={s.container}>\n      <li className={s.item}>\n        {contact.name}: {contact.number}\n      </li>\n      <button\n        className={s.button}\n        id={contact.id}\n        type=\"button\"\n        onClick={() => onDelete(contact.id)}\n      >\n        Delete\n      </button>\n    </div>\n  );\n}\n\nContactListItem.propTypes = {\n  contact: PropTypes.exact({\n    name: PropTypes.string,\n    number: PropTypes.string,\n    id: PropTypes.string,\n  }).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nconst visibleContacts = (items, filter) => {\n  return items.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.trim().toLowerCase())\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { filter, items } = state.contacts;\n\n  return { visibleContacts: visibleContacts(items, filter) };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) => {\n    return dispatch(contactsActions.deleteContact(id));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\n","import { connect } from \"react-redux\";\r\nimport s from \"./ContactList.module.css\";\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\n\r\nfunction ContactList({ visibleContacts }) {\r\n  return (\r\n    <>\r\n      <ul className={s.list}>\r\n        {visibleContacts.map((contact) => (\r\n          <ContactListItem contact={contact} key={contact.id} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nconst visibleContacts = (items, filter) => {\r\n  return items.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.trim().toLowerCase())\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { filter, items } = state.contacts;\r\n\r\n  return { visibleContacts: visibleContacts(items, filter) };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ContactList);\r\n","import ContactForm from \"./components/ContactForm/\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nimport s from \"./App.module.css\";\n\nfunction App() {\n  return (\n    <>\n      <h1 className={s.mainTitle}>Phonebook</h1>\n      <ContactForm />\n      <Filter />\n      <h2 className={s.title}>Contacts</h2>\n      <ContactList />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./contacts-actions\";\n\nconst initialState = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\nfunction newContact(state, { payload }) {\n  const findContact = state.find(({ name }) => name === payload.name);\n  return !findContact\n    ? [...state, payload]\n    : alert(`${payload.name} is already in the contact`);\n}\n\nconst items = createReducer(initialState, {\n  [actions.addContact]: (state, action) => newContact(state, action),\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts-reducer\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst contactPersistConfig = {\n  key: \"contact\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\n\nimport { Provider } from \"react-redux\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__e5qic\",\"name\":\"ContactForm_name__2dFQn\",\"input\":\"ContactForm_input__2n9Zl\",\"button\":\"ContactForm_button__aaVwn\"};"],"sourceRoot":""}